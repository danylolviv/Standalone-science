{"ast":null,"code":"import { inject } from '@angular/core';\nimport { AuthService } from '../../services/auth.service';\nimport { BaseComponent } from '../../util/base.component';\nimport { AnotherService } from '../../services/another.service';\nimport { CommonModule } from '@angular/common';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nfunction StandaloneRoot_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 2)(1, \"h2\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"p\");\n    i0.ɵɵtext(4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"p\");\n    i0.ɵɵtext(6);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    const game_r1 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(game_r1.name);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Genre: \", game_r1.genre, \"\");\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\"Release Year: \", game_r1.releaseYear, \"\");\n  }\n}\nexport class StandaloneRoot extends BaseComponent {\n  constructor() {\n    super();\n    this.authService = inject(AuthService);\n    this.another = inject(AnotherService);\n    this.videoGames = [{\n      name: 'The Legend of Zelda',\n      genre: 'Action-Adventure',\n      releaseYear: 1986\n    }, {\n      name: 'Super Mario Bros',\n      genre: 'Platform',\n      releaseYear: 1985\n    }, {\n      name: 'Tetris',\n      genre: 'Puzzle',\n      releaseYear: 1984\n    }, {\n      name: 'Minecraft',\n      genre: 'Sandbox',\n      releaseYear: 2011\n    }\n    // add more games as per your requirement\n    ];\n\n    console.log(this.authService.myVar);\n  }\n  static #_ = this.ɵfac = function StandaloneRoot_Factory(t) {\n    return new (t || StandaloneRoot)();\n  };\n  static #_2 = this.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: StandaloneRoot,\n    selectors: [[\"app-inject-example\"]],\n    standalone: true,\n    features: [i0.ɵɵInheritDefinitionFeature, i0.ɵɵStandaloneFeature],\n    decls: 2,\n    vars: 1,\n    consts: [[1, \"flex\", \"gap-6\"], [\"class\", \"w-24 h-40 bg-blend-hue\", 4, \"ngFor\", \"ngForOf\"], [1, \"w-24\", \"h-40\", \"bg-blend-hue\"]],\n    template: function StandaloneRoot_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0);\n        i0.ɵɵtemplate(1, StandaloneRoot_div_1_Template, 7, 3, \"div\", 1);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngForOf\", ctx.videoGames);\n      }\n    },\n    dependencies: [CommonModule, i1.NgForOf],\n    encapsulation: 2\n  });\n}","map":{"version":3,"names":["inject","AuthService","BaseComponent","AnotherService","CommonModule","i0","ɵɵelementStart","ɵɵtext","ɵɵelementEnd","ɵɵadvance","ɵɵtextInterpolate","game_r1","name","ɵɵtextInterpolate1","genre","releaseYear","StandaloneRoot","constructor","authService","another","videoGames","console","log","myVar","_","_2","selectors","standalone","features","ɵɵInheritDefinitionFeature","ɵɵStandaloneFeature","decls","vars","consts","template","StandaloneRoot_Template","rf","ctx","ɵɵtemplate","StandaloneRoot_div_1_Template","ɵɵproperty","i1","NgForOf","encapsulation"],"sources":["/Users/mac2/Documents/Sciencing/standalone-test/src/app/components/inject-example/stansalone-root.component.ts","/Users/mac2/Documents/Sciencing/standalone-test/src/app/components/inject-example/stansalone-root.component.html"],"sourcesContent":["import {Component, inject} from '@angular/core';\nimport {AuthService} from '../../services/auth.service';\nimport {BaseComponent} from '../../util/base.component';\nimport {AnotherService} from '../../services/another.service';\nimport {CommonModule} from '@angular/common';\n\n@Component({\n  standalone: true,\n  selector: 'app-inject-example',\n  imports: [CommonModule],\n  templateUrl: './stansalone-root.component.html',\n})\n\nexport class StandaloneRoot extends BaseComponent{\n\n  authService = inject(AuthService);\n  another = inject(AnotherService);\n\n  videoGames: VideoGame[] = [\n    { name: 'The Legend of Zelda', genre: 'Action-Adventure', releaseYear: 1986 },\n    { name: 'Super Mario Bros', genre: 'Platform', releaseYear: 1985 },\n    { name: 'Tetris', genre: 'Puzzle', releaseYear: 1984 },\n    { name: 'Minecraft', genre: 'Sandbox', releaseYear: 2011 },\n    // add more games as per your requirement\n  ];\n\n  constructor() {\n    super()\n    console.log(this.authService.myVar)\n  }\n\n\n}\n\nexport interface VideoGame {\n  name: string;\n  genre: string;\n  releaseYear: number;\n}\n","<div class=\"flex gap-6\">\n  <div class=\"w-24 h-40 bg-blend-hue\" *ngFor=\"let game of videoGames\">\n    <h2>{{ game.name }}</h2>\n    <p>Genre: {{ game.genre }}</p>\n    <p>Release Year: {{ game.releaseYear }}</p>\n  </div>\n</div>\n"],"mappings":"AAAA,SAAmBA,MAAM,QAAO,eAAe;AAC/C,SAAQC,WAAW,QAAO,6BAA6B;AACvD,SAAQC,aAAa,QAAO,2BAA2B;AACvD,SAAQC,cAAc,QAAO,gCAAgC;AAC7D,SAAQC,YAAY,QAAO,iBAAiB;;;;;ICH1CC,EAAA,CAAAC,cAAA,aAAoE;IAC9DD,EAAA,CAAAE,MAAA,GAAe;IAAAF,EAAA,CAAAG,YAAA,EAAK;IACxBH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAuB;IAAAF,EAAA,CAAAG,YAAA,EAAI;IAC9BH,EAAA,CAAAC,cAAA,QAAG;IAAAD,EAAA,CAAAE,MAAA,GAAoC;IAAAF,EAAA,CAAAG,YAAA,EAAI;;;;IAFvCH,EAAA,CAAAI,SAAA,GAAe;IAAfJ,EAAA,CAAAK,iBAAA,CAAAC,OAAA,CAAAC,IAAA,CAAe;IAChBP,EAAA,CAAAI,SAAA,GAAuB;IAAvBJ,EAAA,CAAAQ,kBAAA,YAAAF,OAAA,CAAAG,KAAA,KAAuB;IACvBT,EAAA,CAAAI,SAAA,GAAoC;IAApCJ,EAAA,CAAAQ,kBAAA,mBAAAF,OAAA,CAAAI,WAAA,KAAoC;;;ADS3C,OAAM,MAAOC,cAAe,SAAQd,aAAa;EAa/Ce,YAAA;IACE,KAAK,EAAE;IAZT,KAAAC,WAAW,GAAGlB,MAAM,CAACC,WAAW,CAAC;IACjC,KAAAkB,OAAO,GAAGnB,MAAM,CAACG,cAAc,CAAC;IAEhC,KAAAiB,UAAU,GAAgB,CACxB;MAAER,IAAI,EAAE,qBAAqB;MAAEE,KAAK,EAAE,kBAAkB;MAAEC,WAAW,EAAE;IAAI,CAAE,EAC7E;MAAEH,IAAI,EAAE,kBAAkB;MAAEE,KAAK,EAAE,UAAU;MAAEC,WAAW,EAAE;IAAI,CAAE,EAClE;MAAEH,IAAI,EAAE,QAAQ;MAAEE,KAAK,EAAE,QAAQ;MAAEC,WAAW,EAAE;IAAI,CAAE,EACtD;MAAEH,IAAI,EAAE,WAAW;MAAEE,KAAK,EAAE,SAAS;MAAEC,WAAW,EAAE;IAAI;IACxD;IAAA,CACD;;IAICM,OAAO,CAACC,GAAG,CAAC,IAAI,CAACJ,WAAW,CAACK,KAAK,CAAC;EACrC;EAAC,QAAAC,CAAA,G;qBAhBUR,cAAc;EAAA;EAAA,QAAAS,EAAA,G;UAAdT,cAAc;IAAAU,SAAA;IAAAC,UAAA;IAAAC,QAAA,GAAAvB,EAAA,CAAAwB,0BAAA,EAAAxB,EAAA,CAAAyB,mBAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,wBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCb3B/B,EAAA,CAAAC,cAAA,aAAwB;QACtBD,EAAA,CAAAiC,UAAA,IAAAC,6BAAA,iBAIM;QACRlC,EAAA,CAAAG,YAAA,EAAM;;;QALiDH,EAAA,CAAAI,SAAA,GAAa;QAAbJ,EAAA,CAAAmC,UAAA,YAAAH,GAAA,CAAAjB,UAAA,CAAa;;;mBDQxDhB,YAAY,EAAAqC,EAAA,CAAAC,OAAA;IAAAC,aAAA;EAAA"},"metadata":{},"sourceType":"module","externalDependencies":[]}